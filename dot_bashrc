# .bashrc
# do not keep a .profile and a .bash_login
# .bash_profile should just source .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
  PATH="$HOME/bin:$PATH"
fi

ssh_context() {
  if [[ -n "$SSH_CLIENT" ]]; then
    #remote
    echo -n "@"
  else
    #local
    echo -n "~"
  fi
}

PS1="\[\033[1;34m\]\u\[\033[1;33m\]$(ssh_context)\h\[\033[0m\]\[\033[1;32m\][\w]\[\033[1;31m\]\\$ \[\033[0m\]"

alias ...='cd ../..'
alias ..='cd ..'
alias du="du -sh"
alias egrep='egrep --color=auto'
alias exe="chmod +x"
alias f='find * | grep '
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias la='ls -la'
alias md='mkdir -p'
alias objdump="objdump -Dslx --wide -M intel"
alias py='python3'

umask 0022

#
# configure ls
#

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
  colorflag="--color"
else # OS X `ls`
  colorflag="-G"
fi

alias ls="ls -uh ${colorflag}"
alias l="ls -luh ${colorflag}"
alias k="ls -luh ${colorflag}"
alias la="ls -lauh ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

#
# Ripgrep
#

export RIPGREP_CONFIG_PATH=$HOME/.config/ripgrep

#
# RVM
#

[ -e /usr/share/rvm/scripts/rvm ] && source /usr/share/rvm/scripts/rvm

#
# Rust/Cargo
#

if [ -f "$HOME/.cargo/env" ] ; then
  . "$HOME/.cargo/env"
fi

#
# Other stuff
#

mem()
{
  ps -eo rss,pid,euser,args:100 --sort %mem | awk '{printf $1/1024 "MB"; $1=""; print }'
}

if command -v direnv &> /dev/null; then
    eval "$(direnv hook bash)"
fi
