[core]
	excludesfile = ~/.config/git/gitignore_global
[user]
	name = {{ .name | quote }}
	email = {{ .email | quote }}
[alias]
	br = branch --verbose
	cl = clone
	ci = commit
	st = status --short --branch
	rt = remote
	co = checkout
	nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")

	c = commit --message              # commit with message
	amend = commit --amend            # ammend your last commit
	pushi = "!git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\""

	stash-all = stash save --include-untracked
	unstage = reset HEAD --

	glog = log --graph
	slog = log --pretty=format:"%h - %an, %ar : %s"

	staged = diff --cached
	dff = diff --ignore-space-at-eol --ignore-space-change --ignore-all-space

	# via http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
	assume   = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed  = "!git ls-files -v | grep ^h | cut -c 3-"

    pfusch = '!git commit -a -m "fix, etc."; git push --force'
[color]
	ui = true
[push]
	default = simple
[diff]
	algorithm = histogram
[pull]
	rebase = true
[fetch]
	prune = true
[stash]
	showPatch = true
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[help]
	autoCorrect = prompt
# TODO: enable after git > 2.35
#[merge]
#	conflictstyle = zdiff3
[rebase]
	autosquash = true
[init]
	defaultBranch = main

[fetch]
	fsckobjects = true
[transfer]
	fsckobjects = true
[receive]
	fsckObjects = true

{{ if lookPath "difft" -}}
[diff]
	# See https://difftastic.wilfred.me.uk/git.html
	# This only works for `git diff`, for others `--ext-diff` needs to be specified
	# e.g.
	#   git show HEAD --ext-diff
	# To use builtin diff, use `git diff --no-ext-diff`
	external = difft
{{- end }}

{{ if eq .chezmoi.osRelease.id "nixos" -}}
[safe]
	directory = /etc/nixos//.git
	directory = /etc/nixos/.git
{{- end }}

# Include work specific gitconfig
[includeIf "gitdir:{{.work_git_dir}}/**"]
	path = ~/.config/git/gitconfig_work

# Include additional work specific gitconfig which will not be tracked/overwritten by chezmoi
[includeIf "gitdir:{{.work_git_dir}}/**"]
	path = ~/.config/git/gitconfig_work_additional

# Optional: 1password credential helper
# [credential "https://gitlab.com/"]
#     username = _
#     helper = "!f() { test \"$1\" = get && echo \"password=$(op read \"...\")\"; }; f"
